/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/outputs.h>

 / {
     keymap {
         compatible = "zmk,keymap";


         default_layer {
 // ------------------------------------------------------------------------------------------------------------
 // [  ESC  ][  !   ][  @    ][   #   ][  $     ][   %     ][   ^   ]     [   &     ][   *         ][  (      ][  )     ][  -       ][   +      ][   `   ]
 // [  TAB  ][ Q    ][  W    ][   E   ][  R     ][   T     ][   [   ]     [   ]     ][   Y         ][  U      ][  I     ][  O       ][   P      ][   \   ]
 // [ SHIFT ][ A    ][  S    ][   D   ][  F     ][   G     ][   (   ]     [   )     ][   H         ][  J      ][  K     ][  L       ][   ;      ][   '   ]
 // [  CTRL ][ Z    ][  X    ][   C   ][  V     ][   B     ]                         [   N         ][  M      ][  ,     ][  .       ][   /      ][ ENTER ]
 // [  ALT  ][ GUI  ][  1u   ][   1u  ][  SPACE ][  BSPC   ]                         [   SPACE     ][  DEL    ][  1u    ][  1u      ][   CAPS   ][   1u  ]
 //                           [ LOWER ][  UNDO  ][  ENTER  ][ RAISE ]     [  RAISE  ][   KP_ENTR   ][  REDO   ][  LOWER ]
 //
             bindings = <
 &kp ESC    &kp EXCL  &kp AT   &kp HASH  &kp DOLLAR  &kp PRCNT &kp CARET        &kp AMPS   &kp ASTRK     &kp LPAR   &kp RPAR  &kp MINUS   &kp EQUAL   &kp GRAVE
 &kp TAB    &kp Q     &kp W    &kp E     &kp R       &kp T     &kp LBKT         &kp RBKT   &kp Y         &kp U      &kp I     &kp O       &kp P       &kp BSLH
 &kp LSHFT  &kp A     &kp S    &kp D     &kp F       &kp G     &kp LPAR         &kp RPAR   &kp H         &kp J      &kp K     &kp L       &kp SEMI    &kp SQT
 &kp LCTRL  &kp Z     &kp X    &kp C     &kp V       &kp B                                 &kp N         &kp M      &kp COMMA &kp DOT     &kp FSLH    &kp ENTER
 &kp LALT   &kp LMETA &kp X    &kp C     &kp SPACE   &kp BSPC                              &kp DEL       &kp SPACE  &kp COMMA &kp DOT     &kp CAPS    &kp ENTER
                               &mo 1     &kp K_UNDO  &kp ENTER &mo 2            &mo 2      &kp KP_ENTER  &kp K_REDO &mo 1
             >;

             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
         };

         raise_layer {
 // ------------------------------------------------------------------------------------------------------------
 // [       ][  F1  ][  F2  ][  F3  ][  F4  ][  F5  ][  F6  ]    [  F7  ][  F8  ][  F9  ][  F10 ][  F11 ][  F12 ][     ]
 // [       ][      ][      ][      ][      ][      ][      ]    [      ][   7  ][   8  ][   9  ][      ][      ][     ]
 // [       ][      ][      ][      ][      ][      ][      ]    [      ][   4  ][   5  ][   6  ][   *  ][      ][     ]
 // [       ][      ][      ][      ][      ][      ]                    [   1  ][   2  ][   3  ][   /  ][      ][     ]
 // [       ][      ][      ][      ][      ][      ]                    [      ][      ][   0  ][   .  ][      ][     ]
 //                          [      ][      ][      ][      ]    [      ][      ][      ][      ]
            bindings = <
 &trans    &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6          &kp F7   &kp F8     &kp F9    &kp F10   &kp F11         &kp F12    &trans
 &trans    &trans    &trans    &trans    &trans    &trans    &trans          &trans   &kp KP_N7  &kp KP_N8 &kp KP_N9 &trans          &trans     &trans
 &trans    &trans    &trans    &trans    &trans    &trans    &trans          &trans   &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp KP_MULTIPLY &trans     &trans
 &trans    &trans    &trans    &trans    &trans    &trans                             &kp KP_N1  &kp KP_N2 &kp KP_N3 &kp KP_DIVIDE   &trans     &trans
 &trans    &trans    &trans    &trans    &trans    &trans                             &trans     &trans    &kp KP_N0 &kp KP_DOT      &trans     &trans
                               &trans    &trans    &trans    &trans          &trans   &trans     &trans    &trans
             >;
         };

         lower_layer {
 // ------------------------------------------------------------------------------------------------------------
 // [       ][  F13 ][  F14 ][  F15 ][  F16 ][ F17  ][   F18  ]    [  F19 ][  F20  ][  F21  ][  F22  ][  F23  ][  F24  ][       ]
 // [ BT Cl ][ BT 0 ][ BT 1 ][ BT 2 ][ BT 3 ][ BT 4 ][        ]    [      ][       ][   ^   ][       ][       ][       ][       ]
 // [       ][      ][      ][      ][      ][      ][        ]    [      ][   <   ][   v   ][   >   ][       ][       ][       ]
 // [       ][      ][      ][      ][      ][      ]                      [       ][       ][       ][       ][       ][       ]
 // [       ][      ][      ][      ][      ][      ]                      [       ][       ][       ][       ][       ][       ]
 //                          [      ][      ][      ][        ]    [      ][       ][       ][       ]
             bindings = <
 &trans      &kp F13      &kp F14      &kp F15      &kp F16      &kp F17      &kp F18          &kp F19  &kp F20   &kp F21   &kp F22   &kp F23    &kp F24    &trans
 &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans           &trans   &trans    &kp UP    &trans    &trans     &trans     &trans
 &trans      &trans       &trans       &trans       &trans       &trans       &trans           &trans   &kp LEFT  &kp DOWN  &kp KP_N6 &kp RIGHT  &trans     &trans
 &trans      &trans       &trans       &trans       &trans       &trans                                 &trans    &trans    &trans    &trans     &trans     &trans
 &trans      &trans       &trans       &trans       &trans       &trans                                 &trans    &trans    &trans    &trans     &trans     &trans
                                       &trans       &trans       &trans       &trans           &trans   &trans    &trans    &trans
             >;
         };
     };
 };
